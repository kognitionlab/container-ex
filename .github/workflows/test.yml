name: Test and Lint

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']
        backend: [docker, podman]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        if [ "${{ matrix.backend }}" = "docker" ]; then
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          # Add current user to docker group
          sudo usermod -aG docker $USER
          # Ensure docker socket is accessible
          sudo chmod 666 /var/run/docker.sock
        else
          sudo apt-get install -y podman
        fi
    
    - name: Create virtual environment
      run: python -m venv venv
    
    - name: Install dependencies
      run: |
        source venv/bin/activate
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8 black
    
    - name: Run linting
      run: |
        source venv/bin/activate
        flake8 app tests
        black --check app tests
    
    - name: Run tests
      run: |
        source venv/bin/activate
        # Set DOCKER_HOST to use the host's Docker socket
        export DOCKER_HOST=unix:///var/run/docker.sock
        pytest --cov=app tests/ --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: true 